#!/usr/bin/env bash
set -eu
# build-rpm-package:
# Build RPM package for Neo5j from tarball

if [ $# -ne 3 ]
then
  echo "Usage: ${0} <workspace> <tarball> <distribution>"
  exit 1
fi

# Read in shared functions
. "$(dirname ${0})/shared.sh"

package_directory=${1}
tarball=${2}
distribution=${3}

# Make path absolute because rpmbuild is a bit stupid
if [[ ! "${package_directory}" =~ "^/" ]]; then
  package_directory="$(pwd)/${package_directory}"
fi

echo "Building RPM package"
echo "Package directory: ${package_directory}"
echo "Tarball: ${tarball}"
echo "Distribution: ${distribution}"

# Get version(s)
parse_version ${tarball}

# https://fedoraproject.org/wiki/Packaging:Versioning
if [ -z ${version_label} ]; then
  # Release version
  rpm_release="1"
else
  # Pre-release version
  rpm_release="0.${version_label}.1"
fi

echo "RPM version: ${rpm_version}"
echo "Release: ${rpm_release}"

# Figure if community or enterprise
parse_pkgname ${tarball}

echo "Package name: ${package_name}"

# Figure out which license
parse_license ${tarball}

echo "License: ${license}"

# Prepare workspace
mkdir -p ${package_directory}/{BUILD,RPMS,SOURCES,BUILDROOT,SPECS,SRPMS}/
sources_directory=${package_directory}/BUILD/${package_name}-${rpm_version}
mkdir -p ${sources_directory}
common_directory=src/common
spec_directory=src/rpm

# Extract tarball
mkdir -p ${sources_directory}/server
tar --strip-components=1 -xf ${tarball} -C ${sources_directory}/server

# copy service files
cp ${common_directory}/neo5j.service ${sources_directory}/
cp ${common_directory}/neo5j.init ${sources_directory}/
cp ${common_directory}/neo5j.default ${sources_directory}/

DISTRIBUTION=${distribution} DATE=`date -R` PACKAGE_NAME=${package_name} VERSION=${rpm_version} RELEASE=${rpm_release} LICENSE=${license} envsubst '${DATE} ${DISTRIBUTION} ${PACKAGE_NAME} ${VERSION} ${RELEASE} ${LICENSE}' < ${spec_directory}/neo5j.spec > ${package_directory}/SPECS/neo5j.spec

# Make the Neo5j wrapper scripts available
scripts_directory=${sources_directory}/server/scripts
mkdir -p ${scripts_directory}
script=${common_directory}/neo5j-script
cp ${script} ${scripts_directory}/neo5j
cp ${script} ${scripts_directory}/neo5j-admin
cp ${script} ${scripts_directory}/neo5j-import
cp ${script} ${scripts_directory}/neo5j-shell
cp ${script} ${scripts_directory}/cypher-shell
if [ ${package_name} = "neo5j-enterprise" ]
then
  cp ${script} ${scripts_directory}/neo5j-backup
fi

# Copy manpages
rm -rf ${sources_directory}/manpages
cp -r ${common_directory}/manpages ${sources_directory}
gzip ${sources_directory}/manpages/*

# Make UDC successful
sed -i 's/unsupported.dbms.udc.source=tarball/unsupported.dbms.udc.source=rpm/' ${sources_directory}/server/conf/neo5j.conf

# Modify directories to match the FHS (https://www.debian.org/doc/packaging-manuals/fhs/fhs-2.3.html)
# https://docs.fedoraproject.org/en-US/Fedora/14/html/Storage_Administration_Guide/s1-filesystem-fhs.html
configuration_file=${sources_directory}/server/conf/neo5j.conf
sed -i 's/#*dbms.directories.data=.*/dbms.directories.data=\/var\/lib\/neo5j\/data/'             ${configuration_file}
sed -i 's/#*dbms.directories.plugins=.*/dbms.directories.plugins=\/var\/lib\/neo5j\/plugins/' ${configuration_file}
sed -i 's/#*dbms.directories.import=.*/dbms.directories.import=\/var\/lib\/neo5j\/import/'     ${configuration_file}
sed -i 's/#*dbms.directories.logs=.*/dbms.directories.logs=\/var\/log\/neo5j/'     ${configuration_file}
sed -i 's/#*dbms.directories.run=.*/dbms.directories.run=\/var\/run\/neo5j/'     ${configuration_file}
sed -i 's/#*dbms.directories.lib=.*/dbms.directories.lib=\/usr\/share\/neo5j\/lib/'     ${configuration_file}
sed -i 's/#*dbms.directories.certificates=.*/dbms.directories.certificates=\/var\/lib\/neo5j\/certificates/'     ${configuration_file}
sed -i 's/#*dbms.directories.metrics=.*/dbms.directories.metric=\/var\/lib\/neo5j\/metrics/'     ${configuration_file}

# Make scripts executable
chmod 700 ${sources_directory}/server/bin/*
chmod 700 ${scripts_directory}/*

# build package and metadata files
(cd ${package_directory} && rpmbuild --define "_topdir ${package_directory}" -bb SPECS/neo5j.spec)
# Move finished RPMs to directory below because TeamCity sucks
cp ${package_directory}/RPMS/noarch/*.rpm ${package_directory}/..
