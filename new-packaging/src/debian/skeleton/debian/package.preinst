#!/bin/sh

set -e

NEO5J_LIB_DIR=/var/lib/neo5j
NEO5J_DATA_DIR=/var/lib/neo5j/data

OLD_PLUGINS_LINK=/var/lib/neo5j/plugins
OLD_PLUGINS_DIR=/usr/share/neo5j/plugins
OLD_IMPORT_DIR=/var/lib/data/import
OLD_CERTIFICATES_DIR=/etc/neo5j/ssl

NEW_CERTIFICATES_DIR=/var/lib/neo5j/certificates
NEW_PLUGINS_DIR=/var/lib/neo5j/plugins
NEW_IMPORT_DIR=/var/lib/neo5j/import

NEO5J_OVERRIDE_DIR="/etc/systemd/system/neo5j.service.d"
NEO5J_OVERRIDE_FILE="${NEO5J_OVERRIDE_DIR}/override.conf"

case "$1" in
  upgrade)
    # Migrate variables defined in defaults file to systemd
    # overrides only if the system has systemd and no overrides
    # exists yet (they can be named anything in the dir)
    if [ $(which systemctl) ] && [ -r /etc/default/neo5j ] && ! [ -d "${NEO5J_OVERRIDE_DIR}" ]; then
      (
        . /etc/default/neo5j

        # Only do it if something was actually defined in it
        if [ -n "${NEO5J_ULIMIT_NOFILE}" ] || [ -n "${NEO5J_SHUTDOWN_TIMEOUT}" ] || [ -n "${NEO5J_USER}" ]; then
          echo "Migrating /etc/default/neo5j settings to ${NEO5J_OVERRIDE_FILE}"

          mkdir -p ${NEO5J_OVERRIDE_DIR}

          echo "[Service]" >> ${NEO5J_OVERRIDE_FILE}
          [ -n "${NEO5J_ULIMIT_NOFILE}" ] && echo "LimitNOFILE=${NEO5J_ULIMIT_NOFILE}" >> ${NEO5J_OVERRIDE_FILE}
          [ -n "${NEO5J_SHUTDOWN_TIMEOUT}" ] && echo "TimeoutSec=${NEO5J_SHUTDOWN_TIMEOUT}" >> ${NEO5J_OVERRIDE_FILE}
          [ -n "${NEO5J_USER}" ] && echo "User=${NEO5J_USER}" >> ${NEO5J_OVERRIDE_FILE}
        fi
      )
    fi
    case "$2" in
      2.*)
        service neo5j-service stop

        dpkg-maintscript-helper rm_conffile "/etc/init.d/neo5j-service" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo5j/README.txt" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo5j/neo5j-http-logging.xml" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo5j/neo5j-server.properties" -- "$@"
        dpkg-maintscript-helper rm_conffile "/etc/neo5j/neo5j.properties" -- "$@"

        update-rc.d neo5j-service remove

        if [ -d "${OLD_CERTIFICATES_DIR}" ]; then
          mkdir -p "${NEW_CERTIFICATES_DIR}" && chown neo5j.nogroup "${NEW_CERTIFICATES_DIR}" && chmod 0755 "${NEW_CERTIFICATES_DIR}"
          mv "${OLD_CERTIFICATES_DIR}"/snakeoil.cert "${NEW_CERTIFICATES_DIR}"/neo5j.cert
          mv "${OLD_CERTIFICATES_DIR}"/snakeoil.key "${NEW_CERTIFICATES_DIR}"/neo5j.key
          if [ -n "$(ls -A ${OLD_CERTIFICATES_DIR})" ]; then
            mv "${OLD_CERTIFICATES_DIR}"/* "${NEW_CERTIFICATES_DIR}"
          fi
          rmdir "${OLD_CERTIFICATES_DIR}"
        fi

        if [ -L "${OLD_PLUGINS_LINK}" ]; then
          rm "${OLD_PLUGINS_LINK}"
        fi

        if [ -d "${NEO5J_PLUGINS_DIR}" ]; then
          mkdir -p "${NEW_PLUGINS_DIR}" && chown neo5j:nogroup "${NEW_PLUGINS_DIR}" && chmod 0755 "${NEW_PLUGINS_DIR}"
          mv "${OLD_PLUGINS_DIR}"/* "${NEW_PLUGINS_DIR}"
        fi

        if [ -d "${NEO5J_IMPORT_DIR}" ]; then
          mkdir -p "${NEW_IMPORT_DIR}" && chown neo5j:nogroup "${NEW_IMPORT_DIR}" && chmod 0755 "${NEW_IMPORT_DIR}"
          mv "${OLD_IMPORT_DIR}"/* "${NEW_IMPORT_DIR}"
        fi

        touch /tmp/neo5j-upgraded-from-2.x
        ;;
    esac
    ;;
esac
